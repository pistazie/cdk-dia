// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`cdk-tree parsing src/test-fixtures/ - ec-loadbalancer-rds - collapsed 1`] = `
Node {
  "attributes": Map {},
  "children": Map {
    "Tree" => Node {
      "attributes": Map {},
      "children": Map {},
      "constructInfoFqn": undefined,
      "id": "Tree",
      "path": "Tree",
    },
    "QueueIsSubscribedToTopicStack" => Node {
      "attributes": Map {},
      "children": Map {
        "MyVpc" => Node {
          "attributes": Map {},
          "children": Map {
            "Resource" => Node {
              "attributes": Map {
                "aws:cdk:cloudformation:type" => "AWS::EC2::VPC",
                "aws:cdk:cloudformation:props" => {
                  "cidrBlock": "10.0.0.0/16",
                  "enableDnsHostnames": true,
                  "enableDnsSupport": true,
                  "instanceTenancy": "default",
                  "tags": [
                    {
                      "key": "Name",
                      "value": "QueueIsSubscribedToTopicStack/MyVpc",
                    },
                  ],
                },
              },
              "children": Map {},
              "constructInfoFqn": undefined,
              "id": "Resource",
              "path": "QueueIsSubscribedToTopicStack/MyVpc/Resource",
            },
            "PublicSubnet1" => Node {
              "attributes": Map {},
              "children": Map {
                "Subnet" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::Subnet",
                    "aws:cdk:cloudformation:props" => {
                      "availabilityZone": {
                        "Fn::Select": [
                          0,
                          {
                            "Fn::GetAZs": "",
                          },
                        ],
                      },
                      "cidrBlock": "10.0.0.0/18",
                      "mapPublicIpOnLaunch": true,
                      "tags": [
                        {
                          "key": "aws-cdk:subnet-name",
                          "value": "Public",
                        },
                        {
                          "key": "aws-cdk:subnet-type",
                          "value": "Public",
                        },
                        {
                          "key": "Name",
                          "value": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet1",
                        },
                      ],
                      "vpcId": {
                        "Ref": "MyVpcF9F0CA6F",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "Subnet",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet1/Subnet",
                },
                "Acl" => Node {
                  "attributes": Map {},
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "Acl",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet1/Acl",
                },
                "RouteTable" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::RouteTable",
                    "aws:cdk:cloudformation:props" => {
                      "tags": [
                        {
                          "key": "Name",
                          "value": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet1",
                        },
                      ],
                      "vpcId": {
                        "Ref": "MyVpcF9F0CA6F",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "RouteTable",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet1/RouteTable",
                },
                "RouteTableAssociation" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::SubnetRouteTableAssociation",
                    "aws:cdk:cloudformation:props" => {
                      "routeTableId": {
                        "Ref": "MyVpcPublicSubnet1RouteTableC46AB2F4",
                      },
                      "subnetId": {
                        "Ref": "MyVpcPublicSubnet1SubnetF6608456",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "RouteTableAssociation",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet1/RouteTableAssociation",
                },
                "DefaultRoute" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::Route",
                    "aws:cdk:cloudformation:props" => {
                      "destinationCidrBlock": "0.0.0.0/0",
                      "gatewayId": {
                        "Ref": "MyVpcIGW5C4A4F63",
                      },
                      "routeTableId": {
                        "Ref": "MyVpcPublicSubnet1RouteTableC46AB2F4",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "DefaultRoute",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet1/DefaultRoute",
                },
                "EIP" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::EIP",
                    "aws:cdk:cloudformation:props" => {
                      "domain": "vpc",
                      "tags": [
                        {
                          "key": "Name",
                          "value": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet1",
                        },
                      ],
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "EIP",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet1/EIP",
                },
                "NATGateway" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::NatGateway",
                    "aws:cdk:cloudformation:props" => {
                      "allocationId": {
                        "Fn::GetAtt": [
                          "MyVpcPublicSubnet1EIP096967CB",
                          "AllocationId",
                        ],
                      },
                      "subnetId": {
                        "Ref": "MyVpcPublicSubnet1SubnetF6608456",
                      },
                      "tags": [
                        {
                          "key": "Name",
                          "value": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet1",
                        },
                      ],
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "NATGateway",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet1/NATGateway",
                },
              },
              "constructInfoFqn": undefined,
              "id": "PublicSubnet1",
              "path": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet1",
            },
            "PublicSubnet2" => Node {
              "attributes": Map {},
              "children": Map {
                "Subnet" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::Subnet",
                    "aws:cdk:cloudformation:props" => {
                      "availabilityZone": {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::GetAZs": "",
                          },
                        ],
                      },
                      "cidrBlock": "10.0.64.0/18",
                      "mapPublicIpOnLaunch": true,
                      "tags": [
                        {
                          "key": "aws-cdk:subnet-name",
                          "value": "Public",
                        },
                        {
                          "key": "aws-cdk:subnet-type",
                          "value": "Public",
                        },
                        {
                          "key": "Name",
                          "value": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet2",
                        },
                      ],
                      "vpcId": {
                        "Ref": "MyVpcF9F0CA6F",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "Subnet",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet2/Subnet",
                },
                "Acl" => Node {
                  "attributes": Map {},
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "Acl",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet2/Acl",
                },
                "RouteTable" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::RouteTable",
                    "aws:cdk:cloudformation:props" => {
                      "tags": [
                        {
                          "key": "Name",
                          "value": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet2",
                        },
                      ],
                      "vpcId": {
                        "Ref": "MyVpcF9F0CA6F",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "RouteTable",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet2/RouteTable",
                },
                "RouteTableAssociation" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::SubnetRouteTableAssociation",
                    "aws:cdk:cloudformation:props" => {
                      "routeTableId": {
                        "Ref": "MyVpcPublicSubnet2RouteTable1DF17386",
                      },
                      "subnetId": {
                        "Ref": "MyVpcPublicSubnet2Subnet492B6BFB",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "RouteTableAssociation",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet2/RouteTableAssociation",
                },
                "DefaultRoute" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::Route",
                    "aws:cdk:cloudformation:props" => {
                      "destinationCidrBlock": "0.0.0.0/0",
                      "gatewayId": {
                        "Ref": "MyVpcIGW5C4A4F63",
                      },
                      "routeTableId": {
                        "Ref": "MyVpcPublicSubnet2RouteTable1DF17386",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "DefaultRoute",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet2/DefaultRoute",
                },
                "EIP" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::EIP",
                    "aws:cdk:cloudformation:props" => {
                      "domain": "vpc",
                      "tags": [
                        {
                          "key": "Name",
                          "value": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet2",
                        },
                      ],
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "EIP",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet2/EIP",
                },
                "NATGateway" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::NatGateway",
                    "aws:cdk:cloudformation:props" => {
                      "allocationId": {
                        "Fn::GetAtt": [
                          "MyVpcPublicSubnet2EIP8CCBA239",
                          "AllocationId",
                        ],
                      },
                      "subnetId": {
                        "Ref": "MyVpcPublicSubnet2Subnet492B6BFB",
                      },
                      "tags": [
                        {
                          "key": "Name",
                          "value": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet2",
                        },
                      ],
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "NATGateway",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet2/NATGateway",
                },
              },
              "constructInfoFqn": undefined,
              "id": "PublicSubnet2",
              "path": "QueueIsSubscribedToTopicStack/MyVpc/PublicSubnet2",
            },
            "PrivateSubnet1" => Node {
              "attributes": Map {},
              "children": Map {
                "Subnet" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::Subnet",
                    "aws:cdk:cloudformation:props" => {
                      "availabilityZone": {
                        "Fn::Select": [
                          0,
                          {
                            "Fn::GetAZs": "",
                          },
                        ],
                      },
                      "cidrBlock": "10.0.128.0/18",
                      "mapPublicIpOnLaunch": false,
                      "tags": [
                        {
                          "key": "aws-cdk:subnet-name",
                          "value": "Private",
                        },
                        {
                          "key": "aws-cdk:subnet-type",
                          "value": "Private",
                        },
                        {
                          "key": "Name",
                          "value": "QueueIsSubscribedToTopicStack/MyVpc/PrivateSubnet1",
                        },
                      ],
                      "vpcId": {
                        "Ref": "MyVpcF9F0CA6F",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "Subnet",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PrivateSubnet1/Subnet",
                },
                "Acl" => Node {
                  "attributes": Map {},
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "Acl",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PrivateSubnet1/Acl",
                },
                "RouteTable" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::RouteTable",
                    "aws:cdk:cloudformation:props" => {
                      "tags": [
                        {
                          "key": "Name",
                          "value": "QueueIsSubscribedToTopicStack/MyVpc/PrivateSubnet1",
                        },
                      ],
                      "vpcId": {
                        "Ref": "MyVpcF9F0CA6F",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "RouteTable",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PrivateSubnet1/RouteTable",
                },
                "RouteTableAssociation" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::SubnetRouteTableAssociation",
                    "aws:cdk:cloudformation:props" => {
                      "routeTableId": {
                        "Ref": "MyVpcPrivateSubnet1RouteTable8819E6E2",
                      },
                      "subnetId": {
                        "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "RouteTableAssociation",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PrivateSubnet1/RouteTableAssociation",
                },
                "DefaultRoute" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::Route",
                    "aws:cdk:cloudformation:props" => {
                      "destinationCidrBlock": "0.0.0.0/0",
                      "natGatewayId": {
                        "Ref": "MyVpcPublicSubnet1NATGatewayAD3400C1",
                      },
                      "routeTableId": {
                        "Ref": "MyVpcPrivateSubnet1RouteTable8819E6E2",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "DefaultRoute",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PrivateSubnet1/DefaultRoute",
                },
              },
              "constructInfoFqn": undefined,
              "id": "PrivateSubnet1",
              "path": "QueueIsSubscribedToTopicStack/MyVpc/PrivateSubnet1",
            },
            "PrivateSubnet2" => Node {
              "attributes": Map {},
              "children": Map {
                "Subnet" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::Subnet",
                    "aws:cdk:cloudformation:props" => {
                      "availabilityZone": {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::GetAZs": "",
                          },
                        ],
                      },
                      "cidrBlock": "10.0.192.0/18",
                      "mapPublicIpOnLaunch": false,
                      "tags": [
                        {
                          "key": "aws-cdk:subnet-name",
                          "value": "Private",
                        },
                        {
                          "key": "aws-cdk:subnet-type",
                          "value": "Private",
                        },
                        {
                          "key": "Name",
                          "value": "QueueIsSubscribedToTopicStack/MyVpc/PrivateSubnet2",
                        },
                      ],
                      "vpcId": {
                        "Ref": "MyVpcF9F0CA6F",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "Subnet",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PrivateSubnet2/Subnet",
                },
                "Acl" => Node {
                  "attributes": Map {},
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "Acl",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PrivateSubnet2/Acl",
                },
                "RouteTable" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::RouteTable",
                    "aws:cdk:cloudformation:props" => {
                      "tags": [
                        {
                          "key": "Name",
                          "value": "QueueIsSubscribedToTopicStack/MyVpc/PrivateSubnet2",
                        },
                      ],
                      "vpcId": {
                        "Ref": "MyVpcF9F0CA6F",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "RouteTable",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PrivateSubnet2/RouteTable",
                },
                "RouteTableAssociation" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::SubnetRouteTableAssociation",
                    "aws:cdk:cloudformation:props" => {
                      "routeTableId": {
                        "Ref": "MyVpcPrivateSubnet2RouteTableCEDCEECE",
                      },
                      "subnetId": {
                        "Ref": "MyVpcPrivateSubnet2Subnet0040C983",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "RouteTableAssociation",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PrivateSubnet2/RouteTableAssociation",
                },
                "DefaultRoute" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::Route",
                    "aws:cdk:cloudformation:props" => {
                      "destinationCidrBlock": "0.0.0.0/0",
                      "natGatewayId": {
                        "Ref": "MyVpcPublicSubnet2NATGateway91BFBEC9",
                      },
                      "routeTableId": {
                        "Ref": "MyVpcPrivateSubnet2RouteTableCEDCEECE",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "DefaultRoute",
                  "path": "QueueIsSubscribedToTopicStack/MyVpc/PrivateSubnet2/DefaultRoute",
                },
              },
              "constructInfoFqn": undefined,
              "id": "PrivateSubnet2",
              "path": "QueueIsSubscribedToTopicStack/MyVpc/PrivateSubnet2",
            },
            "IGW" => Node {
              "attributes": Map {
                "aws:cdk:cloudformation:type" => "AWS::EC2::InternetGateway",
                "aws:cdk:cloudformation:props" => {
                  "tags": [
                    {
                      "key": "Name",
                      "value": "QueueIsSubscribedToTopicStack/MyVpc",
                    },
                  ],
                },
              },
              "children": Map {},
              "constructInfoFqn": undefined,
              "id": "IGW",
              "path": "QueueIsSubscribedToTopicStack/MyVpc/IGW",
            },
            "VPCGW" => Node {
              "attributes": Map {
                "aws:cdk:cloudformation:type" => "AWS::EC2::VPCGatewayAttachment",
                "aws:cdk:cloudformation:props" => {
                  "internetGatewayId": {
                    "Ref": "MyVpcIGW5C4A4F63",
                  },
                  "vpcId": {
                    "Ref": "MyVpcF9F0CA6F",
                  },
                },
              },
              "children": Map {},
              "constructInfoFqn": undefined,
              "id": "VPCGW",
              "path": "QueueIsSubscribedToTopicStack/MyVpc/VPCGW",
            },
          },
          "constructInfoFqn": undefined,
          "id": "MyVpc",
          "path": "QueueIsSubscribedToTopicStack/MyVpc",
        },
        "MyLoadbalancer" => Node {
          "attributes": Map {},
          "children": Map {
            "443" => Node {
              "attributes": Map {},
              "children": Map {
                "Resource" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::ElasticLoadBalancingV2::Listener",
                    "aws:cdk:cloudformation:props" => {
                      "defaultActions": [
                        {
                          "targetGroupArn": {
                            "Ref": "MyLoadbalancer443sdfaGroup6DCEDB21",
                          },
                          "type": "forward",
                        },
                      ],
                      "loadBalancerArn": {
                        "Ref": "MyLoadbalancerC5FA523B",
                      },
                      "port": 80,
                      "protocol": "HTTP",
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "Resource",
                  "path": "QueueIsSubscribedToTopicStack/MyLoadbalancer/443/Resource",
                },
                "sdfaGroup" => Node {
                  "attributes": Map {},
                  "children": Map {
                    "Resource" => Node {
                      "attributes": Map {
                        "aws:cdk:cloudformation:type" => "AWS::ElasticLoadBalancingV2::TargetGroup",
                        "aws:cdk:cloudformation:props" => {
                          "port": 80,
                          "protocol": "HTTP",
                          "targetType": "instance",
                          "targets": [
                            {
                              "id": {
                                "Ref": "Web1EEBE43FB",
                              },
                              "port": 80,
                            },
                            {
                              "id": {
                                "Ref": "Web23FFBCA20",
                              },
                              "port": 80,
                            },
                          ],
                          "vpcId": {
                            "Ref": "MyVpcF9F0CA6F",
                          },
                        },
                      },
                      "children": Map {},
                      "constructInfoFqn": undefined,
                      "id": "Resource",
                      "path": "QueueIsSubscribedToTopicStack/MyLoadbalancer/443/sdfaGroup/Resource",
                    },
                  },
                  "constructInfoFqn": undefined,
                  "id": "sdfaGroup",
                  "path": "QueueIsSubscribedToTopicStack/MyLoadbalancer/443/sdfaGroup",
                },
              },
              "constructInfoFqn": undefined,
              "id": "443",
              "path": "QueueIsSubscribedToTopicStack/MyLoadbalancer/443",
            },
            "Resource" => Node {
              "attributes": Map {
                "aws:cdk:cloudformation:type" => "AWS::ElasticLoadBalancingV2::LoadBalancer",
                "aws:cdk:cloudformation:props" => {
                  "loadBalancerAttributes": [
                    {
                      "key": "deletion_protection.enabled",
                      "value": "false",
                    },
                  ],
                  "scheme": "internal",
                  "securityGroups": [
                    {
                      "Fn::GetAtt": [
                        "MyLoadbalancerSecurityGroup5A2F3DCD",
                        "GroupId",
                      ],
                    },
                  ],
                  "subnets": [
                    {
                      "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E",
                    },
                    {
                      "Ref": "MyVpcPrivateSubnet2Subnet0040C983",
                    },
                  ],
                  "type": "application",
                },
              },
              "children": Map {},
              "constructInfoFqn": undefined,
              "id": "Resource",
              "path": "QueueIsSubscribedToTopicStack/MyLoadbalancer/Resource",
            },
            "SecurityGroup" => Node {
              "attributes": Map {},
              "children": Map {
                "Resource" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::SecurityGroup",
                    "aws:cdk:cloudformation:props" => {
                      "groupDescription": "Automatically created Security Group for ELB QueueIsSubscribedToTopicStackMyLoadbalancer58BBF115",
                      "securityGroupEgress": [
                        {
                          "cidrIp": "255.255.255.255/32",
                          "description": "Disallow all traffic",
                          "fromPort": 252,
                          "ipProtocol": "icmp",
                          "toPort": 86,
                        },
                      ],
                      "securityGroupIngress": [
                        {
                          "cidrIp": "0.0.0.0/0",
                          "description": "Allow from anyone on port 80",
                          "fromPort": 80,
                          "ipProtocol": "tcp",
                          "toPort": 80,
                        },
                      ],
                      "vpcId": {
                        "Ref": "MyVpcF9F0CA6F",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "Resource",
                  "path": "QueueIsSubscribedToTopicStack/MyLoadbalancer/SecurityGroup/Resource",
                },
              },
              "constructInfoFqn": undefined,
              "id": "SecurityGroup",
              "path": "QueueIsSubscribedToTopicStack/MyLoadbalancer/SecurityGroup",
            },
          },
          "constructInfoFqn": undefined,
          "id": "MyLoadbalancer",
          "path": "QueueIsSubscribedToTopicStack/MyLoadbalancer",
        },
        "Web1" => Node {
          "attributes": Map {},
          "children": Map {
            "InstanceSecurityGroup" => Node {
              "attributes": Map {},
              "children": Map {
                "Resource" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::SecurityGroup",
                    "aws:cdk:cloudformation:props" => {
                      "groupDescription": "QueueIsSubscribedToTopicStack/Web1/InstanceSecurityGroup",
                      "securityGroupEgress": [
                        {
                          "cidrIp": "0.0.0.0/0",
                          "description": "Allow all outbound traffic by default",
                          "ipProtocol": "-1",
                        },
                      ],
                      "tags": [
                        {
                          "key": "Name",
                          "value": "QueueIsSubscribedToTopicStack/Web1",
                        },
                      ],
                      "vpcId": {
                        "Ref": "MyVpcF9F0CA6F",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "Resource",
                  "path": "QueueIsSubscribedToTopicStack/Web1/InstanceSecurityGroup/Resource",
                },
              },
              "constructInfoFqn": undefined,
              "id": "InstanceSecurityGroup",
              "path": "QueueIsSubscribedToTopicStack/Web1/InstanceSecurityGroup",
            },
            "InstanceRole" => Node {
              "attributes": Map {},
              "children": Map {
                "Resource" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::IAM::Role",
                    "aws:cdk:cloudformation:props" => {
                      "assumeRolePolicyDocument": {
                        "Statement": [
                          {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                              "Service": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "ec2.",
                                    {
                                      "Ref": "AWS::URLSuffix",
                                    },
                                  ],
                                ],
                              },
                            },
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "tags": [
                        {
                          "key": "Name",
                          "value": "QueueIsSubscribedToTopicStack/Web1",
                        },
                      ],
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "Resource",
                  "path": "QueueIsSubscribedToTopicStack/Web1/InstanceRole/Resource",
                },
                "DefaultPolicy" => Node {
                  "attributes": Map {},
                  "children": Map {
                    "Resource" => Node {
                      "attributes": Map {
                        "aws:cdk:cloudformation:type" => "AWS::IAM::Policy",
                        "aws:cdk:cloudformation:props" => {
                          "policyDocument": {
                            "Statement": [
                              {
                                "Action": [
                                  "secretsmanager:PutSecretValue",
                                  "secretsmanager:UpdateSecret",
                                ],
                                "Effect": "Allow",
                                "Resource": {
                                  "Ref": "DatabaseSecretAttachmentE5D1B020",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "policyName": "Web1InstanceRoleDefaultPolicy4C16A778",
                          "roles": [
                            {
                              "Ref": "Web1InstanceRoleCE131C6A",
                            },
                          ],
                        },
                      },
                      "children": Map {},
                      "constructInfoFqn": undefined,
                      "id": "Resource",
                      "path": "QueueIsSubscribedToTopicStack/Web1/InstanceRole/DefaultPolicy/Resource",
                    },
                  },
                  "constructInfoFqn": undefined,
                  "id": "DefaultPolicy",
                  "path": "QueueIsSubscribedToTopicStack/Web1/InstanceRole/DefaultPolicy",
                },
              },
              "constructInfoFqn": undefined,
              "id": "InstanceRole",
              "path": "QueueIsSubscribedToTopicStack/Web1/InstanceRole",
            },
            "InstanceProfile" => Node {
              "attributes": Map {
                "aws:cdk:cloudformation:type" => "AWS::IAM::InstanceProfile",
                "aws:cdk:cloudformation:props" => {
                  "roles": [
                    {
                      "Ref": "Web1InstanceRoleCE131C6A",
                    },
                  ],
                },
              },
              "children": Map {},
              "constructInfoFqn": undefined,
              "id": "InstanceProfile",
              "path": "QueueIsSubscribedToTopicStack/Web1/InstanceProfile",
            },
            "Resource" => Node {
              "attributes": Map {
                "aws:cdk:cloudformation:type" => "AWS::EC2::Instance",
                "aws:cdk:cloudformation:props" => {
                  "availabilityZone": {
                    "Fn::Select": [
                      0,
                      {
                        "Fn::GetAZs": "",
                      },
                    ],
                  },
                  "iamInstanceProfile": {
                    "Ref": "Web1InstanceProfile4AD7432E",
                  },
                  "imageId": {
                    "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
                  },
                  "instanceType": "c6666.large",
                  "securityGroupIds": [
                    {
                      "Fn::GetAtt": [
                        "Web1InstanceSecurityGroup1BA842CD",
                        "GroupId",
                      ],
                    },
                  ],
                  "subnetId": {
                    "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E",
                  },
                  "tags": [
                    {
                      "key": "Name",
                      "value": "QueueIsSubscribedToTopicStack/Web1",
                    },
                  ],
                  "userData": {
                    "Fn::Base64": "#!/bin/bash",
                  },
                },
              },
              "children": Map {},
              "constructInfoFqn": undefined,
              "id": "Resource",
              "path": "QueueIsSubscribedToTopicStack/Web1/Resource",
            },
          },
          "constructInfoFqn": undefined,
          "id": "Web1",
          "path": "QueueIsSubscribedToTopicStack/Web1",
        },
        "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter" => Node {
          "attributes": Map {},
          "children": Map {},
          "constructInfoFqn": undefined,
          "id": "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
          "path": "QueueIsSubscribedToTopicStack/SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
        },
        "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118" => Node {
          "attributes": Map {},
          "children": Map {},
          "constructInfoFqn": undefined,
          "id": "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118",
          "path": "QueueIsSubscribedToTopicStack/SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118",
        },
        "Web2" => Node {
          "attributes": Map {},
          "children": Map {
            "InstanceSecurityGroup" => Node {
              "attributes": Map {},
              "children": Map {
                "Resource" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::SecurityGroup",
                    "aws:cdk:cloudformation:props" => {
                      "groupDescription": "QueueIsSubscribedToTopicStack/Web2/InstanceSecurityGroup",
                      "securityGroupEgress": [
                        {
                          "cidrIp": "0.0.0.0/0",
                          "description": "Allow all outbound traffic by default",
                          "ipProtocol": "-1",
                        },
                      ],
                      "tags": [
                        {
                          "key": "Name",
                          "value": "QueueIsSubscribedToTopicStack/Web2",
                        },
                      ],
                      "vpcId": {
                        "Ref": "MyVpcF9F0CA6F",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "Resource",
                  "path": "QueueIsSubscribedToTopicStack/Web2/InstanceSecurityGroup/Resource",
                },
              },
              "constructInfoFqn": undefined,
              "id": "InstanceSecurityGroup",
              "path": "QueueIsSubscribedToTopicStack/Web2/InstanceSecurityGroup",
            },
            "InstanceRole" => Node {
              "attributes": Map {},
              "children": Map {
                "Resource" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::IAM::Role",
                    "aws:cdk:cloudformation:props" => {
                      "assumeRolePolicyDocument": {
                        "Statement": [
                          {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                              "Service": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "ec2.",
                                    {
                                      "Ref": "AWS::URLSuffix",
                                    },
                                  ],
                                ],
                              },
                            },
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "tags": [
                        {
                          "key": "Name",
                          "value": "QueueIsSubscribedToTopicStack/Web2",
                        },
                      ],
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "Resource",
                  "path": "QueueIsSubscribedToTopicStack/Web2/InstanceRole/Resource",
                },
                "DefaultPolicy" => Node {
                  "attributes": Map {},
                  "children": Map {
                    "Resource" => Node {
                      "attributes": Map {
                        "aws:cdk:cloudformation:type" => "AWS::IAM::Policy",
                        "aws:cdk:cloudformation:props" => {
                          "policyDocument": {
                            "Statement": [
                              {
                                "Action": [
                                  "secretsmanager:PutSecretValue",
                                  "secretsmanager:UpdateSecret",
                                ],
                                "Effect": "Allow",
                                "Resource": {
                                  "Ref": "DatabaseSecretAttachmentE5D1B020",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "policyName": "Web2InstanceRoleDefaultPolicy988B1F61",
                          "roles": [
                            {
                              "Ref": "Web2InstanceRoleA6295717",
                            },
                          ],
                        },
                      },
                      "children": Map {},
                      "constructInfoFqn": undefined,
                      "id": "Resource",
                      "path": "QueueIsSubscribedToTopicStack/Web2/InstanceRole/DefaultPolicy/Resource",
                    },
                  },
                  "constructInfoFqn": undefined,
                  "id": "DefaultPolicy",
                  "path": "QueueIsSubscribedToTopicStack/Web2/InstanceRole/DefaultPolicy",
                },
              },
              "constructInfoFqn": undefined,
              "id": "InstanceRole",
              "path": "QueueIsSubscribedToTopicStack/Web2/InstanceRole",
            },
            "InstanceProfile" => Node {
              "attributes": Map {
                "aws:cdk:cloudformation:type" => "AWS::IAM::InstanceProfile",
                "aws:cdk:cloudformation:props" => {
                  "roles": [
                    {
                      "Ref": "Web2InstanceRoleA6295717",
                    },
                  ],
                },
              },
              "children": Map {},
              "constructInfoFqn": undefined,
              "id": "InstanceProfile",
              "path": "QueueIsSubscribedToTopicStack/Web2/InstanceProfile",
            },
            "Resource" => Node {
              "attributes": Map {
                "aws:cdk:cloudformation:type" => "AWS::EC2::Instance",
                "aws:cdk:cloudformation:props" => {
                  "availabilityZone": {
                    "Fn::Select": [
                      0,
                      {
                        "Fn::GetAZs": "",
                      },
                    ],
                  },
                  "iamInstanceProfile": {
                    "Ref": "Web2InstanceProfileC4D67EEC",
                  },
                  "imageId": {
                    "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
                  },
                  "instanceType": "c5.large",
                  "securityGroupIds": [
                    {
                      "Fn::GetAtt": [
                        "Web2InstanceSecurityGroupF76410E8",
                        "GroupId",
                      ],
                    },
                  ],
                  "subnetId": {
                    "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E",
                  },
                  "tags": [
                    {
                      "key": "Name",
                      "value": "QueueIsSubscribedToTopicStack/Web2",
                    },
                  ],
                  "userData": {
                    "Fn::Base64": "#!/bin/bash",
                  },
                },
              },
              "children": Map {},
              "constructInfoFqn": undefined,
              "id": "Resource",
              "path": "QueueIsSubscribedToTopicStack/Web2/Resource",
            },
          },
          "constructInfoFqn": undefined,
          "id": "Web2",
          "path": "QueueIsSubscribedToTopicStack/Web2",
        },
        "Database" => Node {
          "attributes": Map {},
          "children": Map {
            "Subnets" => Node {
              "attributes": Map {},
              "children": Map {
                "Default" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::RDS::DBSubnetGroup",
                    "aws:cdk:cloudformation:props" => {
                      "dbSubnetGroupDescription": "Subnets for Database database",
                      "subnetIds": [
                        {
                          "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E",
                        },
                        {
                          "Ref": "MyVpcPrivateSubnet2Subnet0040C983",
                        },
                      ],
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "Default",
                  "path": "QueueIsSubscribedToTopicStack/Database/Subnets/Default",
                },
              },
              "constructInfoFqn": undefined,
              "id": "Subnets",
              "path": "QueueIsSubscribedToTopicStack/Database/Subnets",
            },
            "SecurityGroup" => Node {
              "attributes": Map {},
              "children": Map {
                "Resource" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::EC2::SecurityGroup",
                    "aws:cdk:cloudformation:props" => {
                      "groupDescription": "RDS security group",
                      "securityGroupEgress": [
                        {
                          "cidrIp": "0.0.0.0/0",
                          "description": "Allow all outbound traffic by default",
                          "ipProtocol": "-1",
                        },
                      ],
                      "vpcId": {
                        "Ref": "MyVpcF9F0CA6F",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "Resource",
                  "path": "QueueIsSubscribedToTopicStack/Database/SecurityGroup/Resource",
                },
              },
              "constructInfoFqn": undefined,
              "id": "SecurityGroup",
              "path": "QueueIsSubscribedToTopicStack/Database/SecurityGroup",
            },
            "AuroraMySqlDatabaseClusterEngineDefaultParameterGroup" => Node {
              "attributes": Map {},
              "children": Map {},
              "constructInfoFqn": undefined,
              "id": "AuroraMySqlDatabaseClusterEngineDefaultParameterGroup",
              "path": "QueueIsSubscribedToTopicStack/Database/AuroraMySqlDatabaseClusterEngineDefaultParameterGroup",
            },
            "Secret" => Node {
              "attributes": Map {},
              "children": Map {
                "Resource" => Node {
                  "attributes": Map {
                    "aws:cdk:cloudformation:type" => "AWS::SecretsManager::Secret",
                    "aws:cdk:cloudformation:props" => {
                      "description": {
                        "Fn::Join": [
                          "",
                          [
                            "Generated by the CDK for stack: ",
                            {
                              "Ref": "AWS::StackName",
                            },
                          ],
                        ],
                      },
                      "generateSecretString": {
                        "excludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
                        "generateStringKey": "password",
                        "passwordLength": 30,
                        "secretStringTemplate": "{"username":"clusteradmin"}",
                      },
                    },
                  },
                  "children": Map {},
                  "constructInfoFqn": undefined,
                  "id": "Resource",
                  "path": "QueueIsSubscribedToTopicStack/Database/Secret/Resource",
                },
                "Attachment" => Node {
                  "attributes": Map {},
                  "children": Map {
                    "Resource" => Node {
                      "attributes": Map {
                        "aws:cdk:cloudformation:type" => "AWS::SecretsManager::SecretTargetAttachment",
                        "aws:cdk:cloudformation:props" => {
                          "secretId": {
                            "Ref": "QueueIsSubscribedToTopicStackDatabaseSecret360E6F443fdaad7efa858a3daf9490cf0a702aeb",
                          },
                          "targetId": {
                            "Ref": "DatabaseB269D8BB",
                          },
                          "targetType": "AWS::RDS::DBCluster",
                        },
                      },
                      "children": Map {},
                      "constructInfoFqn": undefined,
                      "id": "Resource",
                      "path": "QueueIsSubscribedToTopicStack/Database/Secret/Attachment/Resource",
                    },
                  },
                  "constructInfoFqn": undefined,
                  "id": "Attachment",
                  "path": "QueueIsSubscribedToTopicStack/Database/Secret/Attachment",
                },
              },
              "constructInfoFqn": undefined,
              "id": "Secret",
              "path": "QueueIsSubscribedToTopicStack/Database/Secret",
            },
            "Resource" => Node {
              "attributes": Map {
                "aws:cdk:cloudformation:type" => "AWS::RDS::DBCluster",
                "aws:cdk:cloudformation:props" => {
                  "dbClusterParameterGroupName": "default.aurora-mysql5.7",
                  "dbSubnetGroupName": {
                    "Ref": "DatabaseSubnets56F17B9A",
                  },
                  "engine": "aurora-mysql",
                  "engineVersion": "5.7.mysql_aurora.2.08.1",
                  "masterUserPassword": {
                    "Fn::Join": [
                      "",
                      [
                        "{{resolve:secretsmanager:",
                        {
                          "Ref": "QueueIsSubscribedToTopicStackDatabaseSecret360E6F443fdaad7efa858a3daf9490cf0a702aeb",
                        },
                        ":SecretString:password::}}",
                      ],
                    ],
                  },
                  "masterUsername": "clusteradmin",
                  "vpcSecurityGroupIds": [
                    {
                      "Fn::GetAtt": [
                        "DatabaseSecurityGroup5C91FDCB",
                        "GroupId",
                      ],
                    },
                  ],
                },
              },
              "children": Map {},
              "constructInfoFqn": undefined,
              "id": "Resource",
              "path": "QueueIsSubscribedToTopicStack/Database/Resource",
            },
            "Instance1" => Node {
              "attributes": Map {
                "aws:cdk:cloudformation:type" => "AWS::RDS::DBInstance",
                "aws:cdk:cloudformation:props" => {
                  "dbClusterIdentifier": {
                    "Ref": "DatabaseB269D8BB",
                  },
                  "dbInstanceClass": "db.t2.small",
                  "dbSubnetGroupName": {
                    "Ref": "DatabaseSubnets56F17B9A",
                  },
                  "engine": "aurora-mysql",
                  "engineVersion": "5.7.mysql_aurora.2.08.1",
                  "publiclyAccessible": false,
                },
              },
              "children": Map {},
              "constructInfoFqn": undefined,
              "id": "Instance1",
              "path": "QueueIsSubscribedToTopicStack/Database/Instance1",
            },
            "Instance2" => Node {
              "attributes": Map {
                "aws:cdk:cloudformation:type" => "AWS::RDS::DBInstance",
                "aws:cdk:cloudformation:props" => {
                  "dbClusterIdentifier": {
                    "Ref": "DatabaseB269D8BB",
                  },
                  "dbInstanceClass": "db.t2.small",
                  "dbSubnetGroupName": {
                    "Ref": "DatabaseSubnets56F17B9A",
                  },
                  "engine": "aurora-mysql",
                  "engineVersion": "5.7.mysql_aurora.2.08.1",
                  "publiclyAccessible": false,
                },
              },
              "children": Map {},
              "constructInfoFqn": undefined,
              "id": "Instance2",
              "path": "QueueIsSubscribedToTopicStack/Database/Instance2",
            },
          },
          "constructInfoFqn": undefined,
          "id": "Database",
          "path": "QueueIsSubscribedToTopicStack/Database",
        },
        "CDKMetadata" => Node {
          "attributes": Map {},
          "children": Map {
            "Default" => Node {
              "attributes": Map {},
              "children": Map {},
              "constructInfoFqn": undefined,
              "id": "Default",
              "path": "QueueIsSubscribedToTopicStack/CDKMetadata/Default",
            },
            "Condition" => Node {
              "attributes": Map {},
              "children": Map {},
              "constructInfoFqn": undefined,
              "id": "Condition",
              "path": "QueueIsSubscribedToTopicStack/CDKMetadata/Condition",
            },
          },
          "constructInfoFqn": undefined,
          "id": "CDKMetadata",
          "path": "QueueIsSubscribedToTopicStack/CDKMetadata",
        },
      },
      "constructInfoFqn": undefined,
      "id": "QueueIsSubscribedToTopicStack",
      "path": "QueueIsSubscribedToTopicStack",
    },
  },
  "constructInfoFqn": undefined,
  "id": "App",
  "path": "",
}
`;
